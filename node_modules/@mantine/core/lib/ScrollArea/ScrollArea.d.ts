import React from 'react';
import { DefaultProps, Selectors } from '@mantine/styles';
import { ForwardRefWithStaticComponents } from '@mantine/utils';
import useStyles, { ScrollAreaStylesParams } from './ScrollArea.styles';
export declare type ScrollAreaStylesNames = Selectors<typeof useStyles>;
export interface ScrollAreaProps extends DefaultProps<ScrollAreaStylesNames, ScrollAreaStylesParams>, React.ComponentPropsWithoutRef<'div'> {
    /** Scrollbar size in px */
    scrollbarSize?: number;
    /** Scrollbars type */
    type?: 'auto' | 'always' | 'scroll' | 'hover' | 'never';
    /** Scroll hide delay in ms, for scroll and hover types only */
    scrollHideDelay?: number;
    /** Reading direction of the scroll area */
    dir?: 'ltr' | 'rtl';
    /** Should scrollbars be offset with padding */
    offsetScrollbars?: boolean;
    /** Get viewport ref */
    viewportRef?: React.ForwardedRef<HTMLDivElement>;
    /** Subscribe to scroll position changes */
    onScrollPositionChange?(position: {
        x: number;
        y: number;
    }): void;
}
export declare const _ScrollArea: any;
export interface ScrollAreaAutosizeProps extends ScrollAreaProps {
    maxHeight: React.CSSProperties['maxHeight'];
}
declare const ScrollAreaAutosize: React.ForwardRefExoticComponent<ScrollAreaAutosizeProps & React.RefAttributes<HTMLDivElement>>;
export declare const ScrollArea: ForwardRefWithStaticComponents<ScrollAreaProps, {
    Autosize: typeof ScrollAreaAutosize;
}>;
export {};
//# sourceMappingURL=ScrollArea.d.ts.map